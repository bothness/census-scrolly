{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Main.svelte",
    "Map.svelte",
    "Section.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Map from './Map.svelte';\n\timport Main from './Main.svelte';\n\timport Section from './Section.svelte';\n\timport MapSource from './MapSource.svelte';\n\timport MapLayer from './MapLayer.svelte';\n\timport Select from './Select.svelte';\n\timport { getDataset, getPlace, getGeodata, makeOptions, makeLookup, inViewport, navTo, adjectify, plusminus } from './utils.js';\n\timport { mapObj, mapSources } from './stores.js';\n\t\n\t// Set colour palettes\n\tconst colors = {\n\t\tsequential: ['rgb(210, 233, 254)', 'rgb(159, 201, 238)', 'rgb(24, 158, 212)', 'rgb(0, 97, 180)', 'rgb(0, 33, 104)'],\n\t\tdiverging: []\n\t}\n\t\n\t// Settings for loading datasets\n\tconst baseurl = 'https://raw.githubusercontent.com/bothness/ons-datasets/master/';\n\tconst geodata = {\n\t\turl: 'https://raw.githubusercontent.com/ONSvisual/topojson_boundaries/master/geogLA2015EW.json',\n\t\tlayer: 'LAD15merc'\n\t};\n\tconst mapstyle = 'https://bothness.github.io/ons-basemaps/data/style-omt.json';\n\tconst datasets = [\n\t\t{\n\t\t\tcode: 'popchange',\n\t\t\tsource: 'csv/single/population-value-change-all.csv'\n\t\t},\n\t\t{\n\t\t\tcode: 'agemed',\n\t\t\tsource: 'csv/single/agemed-value-2011-all.csv'\n\t\t},\n\t\t{\n\t\t\tcode: 'density',\n\t\t\tsource: 'csv/single/density-value-2011-all.csv'\n\t\t}\n\t];\n\tconst places = [\n\t\t{\n\t\t\tcode: 'E07000087',\n\t\t\tdefault: true\n\t\t},\n\t\t{\n\t\t\tcode: 'K04000001'\n\t\t}\n\t];\n\t\n\t// Variables to hold data\n\tlet data = {\n\t\tdatasets: {},\n\t\tplaces: {},\n\t\tgeojson: {},\n\t\toptions: [],\n\t\tlookup: {},\n\t\tquantiles: []\n\t};\n\tlet selected = {\n\t\tplace: null,\n\t\tdataset: null,\n\t\tsection: null\n\t};\n\tlet sections = {};\n\t\n\t// Active locations on map\n\tlet location = {\n\t\tselected: null,\n\t\thovered: null\n\t};\n\t\n\t// Loaded status for datasets\n\tlet loaded = {\n\t\tdatasets: false,\n\t\tplaces: false,\n\t\tgeojson: false,\n\t\toptions: false,\n\t\tlookup: false,\n\t\tquantiles: false\n\t};\n\t$: allLoaded = loaded.datasets && loaded.places && loaded.geojson && loaded.options && loaded.lookup && loaded.quantiles ? true : false;\n\t\n\t// Load datasets\n\tfor (let i in datasets) {\n\t\tgetDataset(baseurl + datasets[i].source)\n\t\t.then(result => {\n\t\t\tdata.datasets[datasets[i].code] = result;\n\t\t\tif (datasets[i].default) {\n\t\t\t\tselected.dataset = data.datasets[datasets[i].code];\n\t\t\t};\n\t\t\tif (i == datasets.length - 1) {\n\t\t\t\tloaded.datasets = true;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Load topojson data to geojson object\n\tgetGeodata(geodata.url, geodata.layer)\n\t.then(result => {\n\t\tdata.geojson = result;\n\t\tloaded.geojson = true;\n\t\treturn result.features;\n\t})\n\t.then(features => {\n\t\t// Generate list of place codes & names for selector\n\t\tdata.options = makeOptions(features);\n\t\tloaded.options = true;\n\t\t\n\t\t// Generate lookup for place names\n\t\tdata.lookup = makeLookup(data.options);\n\t\tloaded.lookup = true;\n\t\t\n\t\t// Set rank quantiles based on count of features\n\t\tlet q10 = data.options.length * 0.1;\n\t\tfor (let i = 1; i < 10; i ++) {\n\t\t\tdata.quantiles.push(Math.floor(q10 * i));\n\t\t}\n\t\tdata.quantiles.push(data.options.length);\n\t\tloaded.quantiles = true;\n\t});\n\t\n\t// Load places\n\tfor (let i in places) {\n\t\tgetPlace(baseurl + 'json/place/' + places[i].code + '.json')\n\t\t.then(result => {\n\t\t\tdata.places[places[i].code] = result;\n\t\t\tif (places[i].default) {\n\t\t\t\tselected.place = places[i].code;\n\t\t\t};\n\t\t\tif (i == places.length - 1) {\n\t\t\t\tloaded.places = true;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Listener for scroll events\n\twindow.addEventListener('scroll', function(e) {\n\t\tif (sections[0]) {\n\t\t\tfor (var i in sections) {\n\t\t  \tif (sections[i].el && inViewport(sections[i].el)) {\n\t\t\t  \tif (selected.section != sections[i]) {\n\t\t  \t\t\tselected.section = sections[i];\n\t\t\t\t\t\tif (selected.dataset != data.datasets[selected.section.dataset]) {\n\t\t\t\t\t\t\tselected.dataset = data.datasets[selected.section.dataset];\n\t\t\t\t\t\t}\n\t\t\t  \t\tnavTo(selected.section.location, $mapObj, data.geojson);\n\t\t\t\t\t\tlocation.selected = selected.section.location.geocode ? selected.section.location.geocode : null;\n\t\t\t  \t}\n\t\t\t  \tbreak;\n\t\t\t  }\n\t\t  }\n\t\t}\n\t});\n\t\n\t// Get place data when option is selected\n\t$: if (loaded.places && !data.places[selected.place]) {\n\t\tgetPlace(baseurl + 'json/place/' + selected.place + '.json')\n\t\t.then(result => {\n\t\t\tdata.places[selected.place] = result;\n\t\t});\n\t}\n\n</script>\n\n<style>\n\t:global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n</style>\n\n{#if allLoaded}\n<Main>\n\t<Section type='header' bind:data={sections[0]} dataset={null} >\n\t\t<span slot=\"title\">How our population is changing</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>This is a dynamic scrollytelling prototype with semi-automated data-driven content.</p>\n\t\t\t<p>It highlights some of the significant changes in England &amp; Wales between the 2001 and 2011 Census.</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[1]} dataset=\"popchange\" >\n\t\t<span slot=\"title\">There are more people</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The population of England and Wales in 2011 was {data.places['K04000001'].data.age10yr.value['2011'].all.toLocaleString()}, an increase of {data.places['K04000001'].data.age10yr.value.change.all}% in the decade from 2001.</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[2]} dataset=\"popchange\" location={{geocode: data.datasets.popchange.top5[0].geocode}} >\n\t\t<span slot=\"title\">Fastest growing</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The most rapid population growth was seen in <strong>{data.lookup[data.datasets.popchange.top5[0].geocode]}</strong> (+{data.datasets.popchange.top5[0].value}%), <strong>{data.lookup[data.datasets.popchange.top5[1].geocode]}</strong> (+{data.datasets.popchange.top5[1].value}%) and <strong>{data.lookup[data.datasets.popchange.top5[2].geocode]}</strong> (+{data.datasets.popchange.top5[2].value}%).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[3]} dataset=\"popchange\" location={{geocode: data.datasets.popchange.bottom5[0].geocode}} >\n\t\t<span slot=\"title\">Declining population</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The areas with the fastest shrinking population were <strong>{data.lookup[data.datasets.popchange.bottom5[0].geocode]}</strong> ({data.datasets.popchange.bottom5[0].value}%), <strong>{data.lookup[data.datasets.popchange.bottom5[1].geocode]}</strong> ({data.datasets.popchange.bottom5[1].value}%) and <strong>{data.lookup[data.datasets.popchange.bottom5[2].geocode]}</strong> ({data.datasets.popchange.bottom5[2].value}%).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[4]} dataset=\"density\" >\n\t\t<span slot=\"title\">Growing density</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>England and Wales is one of the most densely populated regions in the world. Between 2001 and 2011 the population rose from {data.places['K04000001'].data.density.value['2001'].all} to {data.places['K04000001'].data.density.value['2011'].all} people per hectare.</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[5]} dataset=\"density\" location={{geocode: data.datasets.density.top5[0].geocode}} >\n\t\t<span slot=\"title\">Most densely populated</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The areas with the highest population density were <strong>{data.lookup[data.datasets.density.top5[0].geocode]}</strong> ({data.datasets.density.top5[0].value} persons per hectare), <strong>{data.lookup[data.datasets.density.top5[1].geocode]}</strong> ({data.datasets.density.top5[1].value} persons per hectare) and <strong>{data.lookup[data.datasets.density.top5[2].geocode]}</strong> ({data.datasets.density.top5[2].value} persons per hectare).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[6]} dataset=\"density\" location={{geocode: data.datasets.density.bottom5[0].geocode}} >\n\t\t<span slot=\"title\">Most sparsely populated</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The areas with the lowest population density were <strong>{data.lookup[data.datasets.density.bottom5[0].geocode]}</strong> ({data.datasets.density.bottom5[0].value} persons per hectare), <strong>{data.lookup[data.datasets.density.bottom5[1].geocode]}</strong> ({data.datasets.density.bottom5[1].value} persons per hectare) and <strong>{data.lookup[data.datasets.density.bottom5[2].geocode]}</strong> ({data.datasets.density.bottom5[2].value} persons per hectare).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[7]} dataset=\"agemed\" >\n\t\t<span slot=\"title\">People are getting older</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The median age in England and Wales is on the rise. Whereas the median age in 2001 was {data.places['K04000001'].data.agemed.value['2001'].all} years, by 2011 it had risen to {data.places['K04000001'].data.agemed.value['2011'].all}.</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[8]} dataset=\"agemed\" location={{geocode: data.datasets.agemed.top5[0].geocode}} >\n\t\t<span slot=\"title\">Oldest population</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The areas with the highest median age were <strong>{data.lookup[data.datasets.agemed.top5[0].geocode]}</strong> ({data.datasets.agemed.top5[0].value} years), <strong>{data.lookup[data.datasets.agemed.top5[1].geocode]}</strong> ({data.datasets.agemed.top5[1].value} years) and <strong>{data.lookup[data.datasets.agemed.top5[2].geocode]}</strong> ({data.datasets.agemed.top5[2].value} years).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[9]} dataset=\"agemed\" location={{geocode: data.datasets.agemed.bottom5[0].geocode}} >\n\t\t<span slot=\"title\">Youngest population</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>The areas with the lowest median age were <strong>{data.lookup[data.datasets.agemed.bottom5[0].geocode]}</strong> ({data.datasets.agemed.bottom5[0].value} years), <strong>{data.lookup[data.datasets.agemed.bottom5[1].geocode]}</strong> ({data.datasets.agemed.bottom5[1].value} years) and <strong>{data.lookup[data.datasets.agemed.bottom5[2].geocode]}</strong> ({data.datasets.agemed.bottom5[2].value} years).</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[10]} dataset=\"agemed\" >\n\t\t<span slot=\"title\">Find your area</span>\n\t\t<span slot=\"description\">\n\t\t\t<Select options={data.options} bind:selected={selected.place} message='Select a local authority' />\n\t\t\t<p>Select an area to see how it compares to the country as a whole.</p>\n\t\t</span>\n\t</Section>\n\t{#if data.places[selected.place]}\n\t<Section bind:data={sections[11]} dataset=\"popchange\" location={{geocode: selected.place}} >\n\t\t<span slot=\"title\">\n\t\t\t{#if data.places[selected.place].data.population.value['change'].all > 0}\n\t\t\tGrowing population\n\t\t\t{:else}\n\t\t\tShrinking population\n\t\t\t{/if}\n\t\t</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>\n\t\t\t\t<strong>{data.places[selected.place].name}</strong> had a population of {data.places[selected.place].data.population.value['2011'].all.toLocaleString()} on Census day 2011, {plusminus(data.places[selected.place].data.population.value['change'].all, '%')}, which was {adjectify(data.quantiles, data.places[selected.place].data.population.value_rank['change'].all, ['lower', 'higher'])} the average change across all local authorities.\n\t\t\t</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[12]} dataset=\"density\" location={{geocode: selected.place}} >\n\t\t<span slot=\"title\">\n\t\t\t{#if data.places[selected.place].data.density.value_rank['2011'].all < data.quantiles[3]}\n\t\t\tLower density\n\t\t\t{:else if data.places[selected.place].data.density.value_rank['2011'].all < data.quantiles[5]}\n\t\t\tDensity\n\t\t\t{:else}\n\t\t\tHigher density\n\t\t\t{/if}\n\t\t</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>\n\t\t\t\t<strong>{data.places[selected.place].name}'s</strong> population density was {data.places[selected.place].data.density.value['2011'].all} people per hectare, {adjectify(data.quantiles, data.places[selected.place].data.density.value_rank['2011'].all, ['lower', 'higher'])} average.\n\t\t\t</p>\n\t\t</span>\n\t</Section>\n\t<Section bind:data={sections[13]} dataset=\"agemed\" location={{geocode: selected.place}} >\n\t\t<span slot=\"title\">\n\t\t\t{#if data.places[selected.place].data.agemed.value_rank['2011'].all < data.quantiles[3]}\n\t\t\tYounger population\n\t\t\t{:else if data.places[selected.place].data.agemed.value_rank['2011'].all < data.quantiles[5]}\n\t\t\tAge\n\t\t\t{:else}\n\t\t\tOlder population\n\t\t\t{/if}\n\t\t</span>\n\t\t<span slot=\"description\">\n\t\t\t<p>\n\t\t\t\tThe median age of <strong>{data.places[selected.place].name}</strong> is {adjectify(data.quantiles, data.places[selected.place].data.agemed.value_rank['2011'].all, ['younger', 'older'])} the average across local authorities, with a median age of {data.places[selected.place].data.agemed.value['2011'].all}, {plusminus(data.places[selected.place].data.agemed.value['2011'].all - data.places[selected.place].data.agemed.value['2001'].all, ' years', ' year')}\n\t\t\t</p>\n\t\t</span>\n\t</Section>\n\t{/if}\n</Main>\n\n<Map style={mapstyle}>\n\t<MapSource id=\"lad\" type=\"geojson\" data={data.geojson} promoteId=\"AREACD\" />\n\t{#if $mapSources.includes(\"lad\")}\n\t<MapLayer id=\"fill\" source=\"lad\" type=\"fill\" data={selected.dataset} colors={colors.sequential} />\n\t<MapLayer id=\"boundaries\" source=\"lad\" type=\"line\" selected={location.selected} paint=\"{{\n\t'line-color': 'rgb(0, 0, 0)',\n\t'line-width': ['case',\n\t  ['==', ['feature-state','selected'], true],\n\t  3,\n\t  0.5\n\t],\n\t'line-opacity': ['case',\n\t  ['==', ['feature-state','selected'], true],\n\t  1,\n\t  0.3\n\t]\n\t}}\" />\n\t{/if}\n</Map>\n{/if}",
    "<style>\n\tmain {\n\t\tz-index: 1000;\n\t\twidth: 40%;\n\t\tposition: absolute;\n\t}\n\t@media (max-width: 600px) {\n\t\tmain {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>\n\n<main>\n\t<slot></slot>\n</main>",
    "<script>\n\timport { onMount } from 'svelte';\n\timport mapbox from 'mapbox-gl';\n\timport { mapObj } from './stores.js';\n\n\texport let location = {\n\t\tbounds: [[-5.816, 49.864], [1.863, 55.872]] // England & Wales bounding box\n\t};\n\texport let style;\n\t\n\tlet map;\n\tlet container;\n\tlet options;\n\t\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (location.lon && location.lat) {\n\t\toptions = {\n\t\t\tcenter: [location.lon, location.lat]\n\t\t}\n\t\tif (location.zoom) {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\tconst link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = 'https://unpkg.com/mapbox-gl/dist/mapbox-gl.css';\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle: style,\n\t\t\t\tinteractive: false,\n\t\t\t\t...options\n\t\t\t});\n\t\t\tmapObj.set(map);\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n</script>\n\n<style>\n\tdiv {\n\t\twidth: 60%;\n\t\theight: 100%;\n\t\tposition: fixed;\n\t\tright: 0;\n\t}\n\t@media (max-width: 600px) {\n\t\tdiv {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>\n\n<div bind:this={container}>\n\t{#if map}\n\t\t<slot></slot>\n\t{/if}\n</div>",
    "<script>\n\texport let data = {};\n\texport let location = {\n\t\tbounds: [[-5.816, 49.864], [1.863, 55.872]] // England & Wales bounding box\n\t};\n\texport let dataset = null;\n\texport let type = 'section';\n\t\n\tdata.location = location;\n\tdata.dataset = dataset;\n\tdata.selected = false;\n</script>\n\n<style>\n\tsection, header {\n\t\tpadding: 10px 20px;\n\t\tmargin-bottom: 100vh;\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t}\n\t@media (min-width: 600px) {\n\t\tsection, header {\n\t\t\tmin-height: 100vh;\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n</style>\n\n{#if type == 'header'}\n<header bind:this={data.el} tabindex=\"0\">\n\t<h1>\n\t\t<slot name=\"title\">\n\t\t\t<span>No title</span>\n\t\t</slot>\n\t</h1>\n\t<slot name=\"description\">\n\t\t<span>No description</span>\n\t</slot>\n\t{#if false}<slot></slot>{/if}\n</header>\n{:else}\n<section bind:this={data.el} tabindex=\"0\">\n\t<h2>\n\t\t<slot name=\"title\">\n\t\t\t<span>No title</span>\n\t\t</slot>\n\t</h2>\n\t<slot name=\"description\">\n\t\t<span>No description</span>\n\t</slot>\n\t{#if false}<slot></slot>{/if}\n</section>\n{/if}"
  ],
  "names": [],
  "mappings": "AAmKS,IAAI,AAAE,CAAC,AACd,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACX,CAAC;ACrKD,IAAI,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACZ,CAAC,AACF,CAAC;ACwCD,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,AACT,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACZ,CAAC,AACF,CAAC;AC9CD,qBAAO,CAAE,MAAM,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,KAAK,CACpB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,qBAAO,CAAE,MAAM,cAAC,CAAC,AAChB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,CAAC,AACjB,CAAC,AACF,CAAC"
}